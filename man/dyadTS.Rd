% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/window_functions_dyads.R
\name{dyadTS}
\alias{dyadTS}
\title{dyadTS function}
\usage{
dyadTS(data, windowsize = days(30), windowshift = days(1),
  measureFun = dyad_weight, effortFun = NULL, directed = FALSE,
  lagged = FALSE, lag = 1, cores = 1)
}
\arguments{
\item{data}{A dataframe with relational data in the first two rows, and a time stamp in the third row. Note: time stamps should be in ymd or ymd_hms format. The lubridate package can be very helpful in organizing times. Note: names in the first two columns are case sensitive.}

\item{windowsize}{The size of the moving window in which to take network measures. These should be provided as e.g., days(30), hours(5), ... etc.}

\item{windowshift}{The amount to shift the moving window for each measure. Again times should be provided as e.g., days(1), hours(1), ... etc.}

\item{measureFun}{This is a function that takes as an input a igraph network and returns values for each node in the network. There are functions within netTS (see details), and custom made functions can be used.}

\item{effortFun}{This is a function that takes as input the data within a window of time and returns the total sampling effort.}

\item{directed}{Whether the events are directed or no: true or false.}

\item{lagged}{Whether the network measure function used requires the comparison between two networks. e.g., comparing the current network to one lagged by 10 days. If TRUE the measureFun should take two graphs as input and return a single value. The order of inputs in the function is the lagged network followed by the current network.}

\item{lag}{If lagged is set to TRUE, this is the lag at which to compare networks.}

\item{cores}{This allows for multiple cores to be used while generating networks and calculating network measures.}
}
\description{
This function will take a dataframe with events between individuals/objects, and take network measures using a moving window approach.
}
\examples{

ts.out<-dyadTS(data=groomEvents)

}
